// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model User{
  id Int  @id @default(autoincrement())
 username String 
  fullName   String
 email String @unique
 password String
 isVerified Boolean @default(false)
 createdAt DateTime @default(now())
 updatedAt DateTime @updatedAt
 
 verification UserVerification? @relation
 hotel Hotel? @relation
}

model UserVerification {
  id Int @id @default(autoincrement()) 
  userId Int @unique //foreign key for user model
  verifyCode String @default("")
  verifyCodeExpiry DateTime @default(now())
  createdAt DateTime @default(now())

  user User @relation(fields: [userId],references: [id])
}

model Hotel{
  id Int @id @default(autoincrement())
  title       String
  description String
  price       Float
  location    String
  images      String[]
  userId      Int @unique
  user        User     @relation(fields: [userId],references: [id])
  bookings Booking[] //1 to many
  createdAt DateTime @default(now())
}
model Booking{
  id Int @id @default(autoincrement())
    firstName  String
  lastName   String
  email      String
  adultCount Int
  childCount Int
  checkIn    DateTime
  checkOut   DateTime
  userId     Int
  totalCost Float

  razorpayOrderId String?
  razorpayPaymentId String?
  paymentStatus String @default("pending")//paid and failed and pending

  hotel Hotel @relation(fields: [hotelId],references: [id])
  hotelId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}